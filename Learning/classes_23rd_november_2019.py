# -*- coding: utf-8 -*-
"""Classes -23rd November 2019.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cVV0MmZaOiacMhcJDOzPHdnEMaCwQO3j
"""

class User():
    print("This is class")

def my_func():
    print("This is func")

my_func()

u = User()

class User():
    def __init__(self, fn, ln):
        self.fn = fn
        self.ln = ln

rahul_user = User("Rahul", "Dev")

shivam_user = User("Shivam", "Gupta")

rahul_user.fn, rahul_user.ln

shivam_user.fn, shivam_user.ln

ak_userak_userak_user

ak_user = User("Akash", "Thakare")

ak_user.fn, ak_user.ln, ak_user.company

sc_user = User("Shin", "Chen")

sc_user.fn, sc_user.ln, sc_user.company

ak_user

class YTUser():
    def __init__(self, fn, ln, product):
        self.firt_name = fn
        self.last_name = ln
        g_product = product
        print("Thanks for joining", g_product)

g_user = YTUser("Gandharva", "lastName", "YouTube")
d_user = YTUser("Dexter", "lastName", "YouTube")

g_user.firt_name

g_user.g_product

class GMailUser():
    def __init__(self, fn, ln, product):
        self.firt_name = fn
        self.last_name = ln
        self.g_product = product
        print("Thanks for joining", self.g_product)

rekha = GMailUser("Rekha", "Sharma", "GMail")

rekha.g_product

class NonConstrClass():
    a = 10
    b = 20
    c = 30
    def add(self, i, j):
        return i*j

aa = NonConstrClass()
bb = NonConstrClass()

aa.a

bb.a

aa.add(10, 20)

class Add():
    def __init__(self, a, b):
        self.a = a
        self.b = b
    def add(self):
        return self.a + self.b

a_add = Add(10, 10)

a_add.a, a_add.b

a_add.add()

class Calc():
    def __init__(self, a, b):
        self.a = a 
        self.b = b
    def add(self):
        return self.a + self.b
    def sub(self):
        return self.a - self.b
    def mul(self):
        return self.a * self.b
    def div(self):
        return self.a / self.b

aa = Calc(20, 10)

aa.add(), aa.sub(), aa.mul(), aa.div()

[i for i in aa.__dir__() if not i.startswith("__")]

"""## Inheritance"""

class GoogleUser():
    def __init__(self, username, password, dob):
        self.username  = username
        self.password  = password
        self.dob = dob

class YTUser(GoogleUser):
    def __init__(self, username, password, dob, fav_genere):
        super().__init__(username, password, dob)
        self.fav_genere = fav_genere

class GMailUser(GoogleUser):
    def __init__(self, username, password, dob, preference):
        super().__init__(username, password, dob)
        self.preference = preference

a_user = GoogleUser("A", "B", "01/01/2000")

yt_user = YTUser(a_user.username, a_user.password, a_user.dob, ["Music", "Cartoons"])

yt_user.dob, yt_user.fav_genere

gmail_user = GMailUser(a_user.username, a_user.password, a_user.dob, ["Education Mails", "Social"])

gmail_user

class YTProperties(YTUser):
    def __init__(self, username, password, dob, fav_genere):
        super().__init__(username, password, dob, fav_genere)
        self.videos = 0 
        self.subscribers = 0 
    def add_videos(self):
        self.videos = self.videos + 1
    def delete_video(self):
        self.videos = self.videos - 1
    def subscribed(self):
        self.subscribers = self.subscribers + 1
    def unsubscribe(self):
        self.subscribers = self.subscribers - 1

yt_properties = YTProperties(yt_user.username, yt_user.password, yt_user.dob, yt_user.fav_genere)

yt_properties.subscribed()
yt_properties.subscribers

yt_properties.unsubscribe()
yt_properties.subscribers

yt_properties.add_videos()
yt_properties.videos

yt_properties.delete_video()
yt_properties.videos

class A:
    x = 10 
class B: 
    y = 20
class C(A, B):
    z = 30

c = C()

c.x, c.y, c.z

def empty_func():
    pass

class A:
    x = 10 
    def add(self,a ,b):
        return a + b 
class C(A):
    x = 20
    def add(self, a, b):
        return a - b

c = C()

c.x

c.add(100, 10)

